swagger: "2.0"

info:
  description: "Serviço de gerenciamento de bares"
  version: "1.0.0"
  title: "FindBAR"

host: "findbar-tbd.com"
basePath: "/v1"

tags:
  - name: "bares"
    description: "Operações sobre bares"

paths:
  /bares:
    get:
      parameters:
        - name: "estilos_musicais"
          in: "query"
          description: "Filtro por estilo musical"
          required: true
          type: "string"
        - name: "musica_ao_vivo"
          in: "query"
          description: "Filtro por musica ao vivo"
          required: true
          type: "boolean"
        - name: "avaliacao"
          in: "query"
          description: "Filtro por avaliação"
          required: true
          type: "integer"
      tags:
        - "bares"
      summary: "Lista todos os bares cadastrados"
      operationId: "findBares"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bar"
    post:
      tags:
        - "bares"
      summary: "Cadastra um novo bar"
      operationId: "createBar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Bar a ser salvo"
          required: true
          schema:
            $ref: "#/definitions/BarCriacao"
      responses:
        "200":
          description: "sucesso"
          schema:
            $ref: "#/definitions/Bar"
            
  /tags/bares/{barId}:
    post:
      tags:
        - "tags"
      summary: "Cadastra uma ou mais tags"
      operationId: "addTags"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "barId"
          in: "path"
          description: "ID do bar"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Tags a serem adicionadas"
          required: true
          schema:
            type: "array"
            items: 
              type: "string"
              example: "Comida mexicana"
      responses:
        "200":
          description: "sucesso"
          schema:
            $ref: "#/definitions/Bar"
            
  /tags/{tagId}:
    delete:
      tags:
        - "tags"
      summary: "Deleta uma tag baseada no ID"
      operationId: "deleteTag"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "tagId"
          in: "path"
          description: "ID da tag"
          required: true
          type: "string"
      responses:
        "204":
          description: "no content"
    

  /bares/{barId}:
    get:
      tags:
        - "bares"
      summary: "Busca um bar cadastrado por ID"
      operationId: "findBar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "barId"
          in: "path"
          description: "ID do bar"
          required: true
          type: "string"
      responses:
        "200":
          description: "sucesso"
          schema:
            $ref: "#/definitions/Bar"
    patch:
      tags:
        - "bares"
      summary: "Atualiza um bar"
      operationId: "updateBar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "barId"
          in: "path"
          description: "ID do bar"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Bar a ser atualizado"
          required: true
          schema:
            $ref: "#/definitions/BarAlteracao"
      responses:
        "200":
          description: "sucesso"
          schema:
            $ref: "#/definitions/Bar"
    delete:
      tags:
        - "bares"
      summary: "Exclui um bar cadastrado por ID"
      operationId: "deleteBar"
      consumes:
        - "application/json"
      parameters:
        - name: "barId"
          in: "path"
          description: "ID do bar"
          required: true
          type: "string"
      responses:
        "204":
          description: "sucesso"
          
  /comentarios/bares/{barId}:
    post:
      tags:
        - "comentario"
      summary: "Cadastra um comentário para um bar"
      operationId: "addComments"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "barId"
          in: "path"
          description: "ID do bar"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Comentários a serem adicionados"
          required: true
          schema:
            $ref: "#/definitions/Comentario"
      responses:
        "200":
          description: "sucesso"
          schema:
            $ref: "#/definitions/Bar"
            
  /comentarios/{commentId}:
    delete:
      tags:
        - "comentario"
      summary: "Deleta um comentário para um bar"
      operationId: "deleteComment"
      consumes:
        - "application/json"
      parameters:
        - name: "commentId"
          in: "path"
          description: "ID do comentário"
          required: true
          type: "string"
      responses:
        "204":
          description: "no content"
          
    patch:
      tags:
        - "comentario"
      summary: "Edita um comentário para um bar"
      operationId: "updateComment"
      consumes: 
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "commentId"
          in: "path"
          description: "ID do comentário"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "Novo comentário"
          required: true
          schema:
            type: "string"
            example: "Teste de comentário novo"
      responses:
        "200":
          description: "sucesso"
          schema: 
            $ref: "#/definitions/Comentario"
            
  /comentarios/{commentId}/reaction:          
    patch:
      tags:
        - "comentario"
      summary: "Adiciona um like ou dislike"
      operationId: "likeComment"
      consumes: 
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "commentId"
          in: "path"
          description: "ID do comentário"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "Novo comentário"
          required: true
          schema:
           $ref: "#/definitions/ComentarioReaction"
      responses:
        "200":
          description: "sucesso"
          schema: 
            $ref: "#/definitions/Comentario"
          
    

definitions:

  Bar:
    type: "object"
    properties:
      id:
        type: "string"
        example: "ebfef1a7-984c-48dc-8b5b-40e5b3f8da90"
      nome:
        type: "string"
        example: "BarBA"
      horario_abertura:
        type: "string"
        example: "10:00"
      horario_fechamento:
        type: "string"
        example: "22:00"
      endereco:
        $ref: "#/definitions/Endereco"
      tipo:
        type: "string"
        example: "PUB"
      estilos_musicais:
        type: "array"
        items:
          type: "string"
          example: "ROCK"
      musica_ao_vivo:
        type: "boolean"
      avaliacao:
        type: "number"
        example: 2.5
      comentarios:
        type: "array"
        items:
          $ref: "#/definitions/Comentario"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"

  BarCriacao:
    type: "object"
    properties:
      nome:
        type: "string"
        example: "BarBA"
      horario_abertura:
        type: "string"
        example: "10:00"
      horario_fechamento:
        type: "string"
        example: "22:00"
      endereco:
        $ref: "#/definitions/Endereco"
      tipo:
        type: "string"
        example: "PUB"
      estilos_musicais:
        type: "array"
        items:
          type: "string"
          example: "ROCK"
      musica_ao_vivo:
        type: "boolean"

  BarAlteracao:
    type: "object"
    properties:
      nome:
        type: "string"
        example: "BarBA"
      horario_abertura:
        type: "string"
        example: "10:00"
      horario_fechamento:
        type: "string"
        example: "22:00"
      endereco:
        $ref: "#/definitions/EnderecoAlteracao"
      tipo:
        type: "string"
        example: "PUB"
      estilos_musicais:
        type: "array"
        items:
          type: "string"
          example: "ROCK"
      musica_ao_vivo:
        type: "boolean"

  Endereco:
    type: "object"
    properties:
      logradouro:
        type: "string"
        example: "Rua Lucas Lindo"
      numero:
        type: "string"
        example: "42"
      complemento:
        type: "string"
        example: "Apartamento 3 bloco A"
      cep:
        type: "string"
        example: "01139-001"
      bairro:
        type: "string"
        example: "Jardim Sao Luis"
      cidade:
        type: "string"
        example: "Sao Paulo"
      estado:
        type: "string"
        example: "SP"

  EnderecoAlteracao:
    type: "object"
    properties:
      logradouro:
        type: "string"
        example: "Rua Lucas Lindo"
      numero:
        type: "string"
        example: "42"
      complemento:
        type: "string"
        example: "Apartamento 3 bloco A"
      cep:
        type: "string"
        example: "01139-001"
      bairro:
        type: "string"
        example: "Jardim Sao Luis"
      cidade:
        type: "string"
        example: "Sao Paulo"
      estado:
        type: "string"
        example: "SP"
      
  Tag:
    type: "object"
    properties:
      id: 
        type: "string"
        example: "507f1f77bcf86cd799439011"
      value:
        type: "string"
        example: "Comida mexicana"

  Comentario:
    type: "object"
    properties:
      id:
        type: "string"
        example: "507f1f77bcf86cd799439011"
      barId:
        type: "string"
        example: "ebfef1a7-984c-48dc-8b5b-40e5b3f8da90"
      mensagem:
        type: "string"
        example: "Esse bar é incrível!"
      nota:
        type: "number"
        example: 4
      likes:
        type: "integer"
        example: 3
      dislikes:
        type: "integer"
        example: 999

  ComentarioReaction:
    type: "object"
    properties:
      reaction:
        type: "string"
        enum: [ 'LIKE', 'DISLIKE' ]
